plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.5'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.grupo3'
version = '0.0.1'
description = 'verification-service'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
    maven { url 'https://jitpack.io' }
}

ext {
    set('springCloudVersion', '2025.0.0')
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-test'

    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    annotationProcessor 'org.projectlombok:lombok'
    runtimeOnly 'com.mysql:mysql-connector-j'
    
    // swagger
    implementation "org.springdoc:springdoc-openapi-starter-webmvc-ui:2.8.13"
    
    // Testing dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.springframework.security:spring-security-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
    testImplementation 'com.h2database:h2'

    //Email
    implementation 'org.springframework.boot:spring-boot-starter-mail'
    //para hacer correos con html mas vistosos
    implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

    // Shared DTOs
    implementation 'com.github.xsismadn3ss:shared-dtos:v1.0.21'

    // spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-openfeign'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named("bootBuildImage") {
    def repo = System.getenv("GITHUB_REPOSITORY")
    imageName = (project.findProperty("imageName") ?: "ghcr.io/${repo}:${project.version}") as String

    environment = [
            "BP_JVM_VERSION": "21"
    ]
}